generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Banner {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  imageUrl  String
  isActive  Boolean
  link      String
  title     String
  updatedAt DateTime @db.Date
}

model BannerProduct {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @db.Date
  description String
  imageUrl    String
  isActive    Boolean
  slug        String   @unique
  title       String
  updatedAt   DateTime @db.Date
}

model Coupon {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  couponCode String
  createdAt  DateTime @db.Date
  expiryDate DateTime @db.Date
  isActive   Boolean
  title      String
  updatedAt  DateTime @db.Date
}

model Farmer {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  code               String
  contactPerson      String
  contactPersonPhone String
  createdAt          DateTime @db.Date
  email              String
  name               String
  notes              String
  phone              String
  physicalAddress    String
  terms              String
  updatedAt          DateTime @db.Date
}

model FarmerProfile {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  code               String
  contactPerson      String
  contactPersonPhone String
  createdAt          DateTime @db.Date
  email              String
  isActive           Boolean
  landSize           Float
  mainCrop           String
  name               String
  notes              String
  phone              String
  physicalAddress    String
  products           String[]
  profileImageUrl    String
  terms              String
  updatedAt          DateTime @db.Date
  userId             String   @unique @db.ObjectId
}

model Market {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  categoryIds String[]
  createdAt   DateTime @db.Date
  description String
  isActive    Boolean
  logoUrl     String
  slug        String   @unique
  title       String
  updatedAt   DateTime @db.Date
}

model MarketCategory {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  categoryId Json?
  /// Field referred in an index, but found no data to define the type.
  marketId   Json?

  @@unique([marketId, categoryId])
}

model Product {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  barcode        String
  categoryId     String   @db.ObjectId
  createdAt      DateTime @db.Date
  description    String
  imageUrl       String
  isActive       Boolean
  isWholesale    Boolean
  productCode    String
  productPrice   Float
  productStock   BigInt
  qty            BigInt
  salePrice      Float
  sku            String
  slug           String   @unique
  tags           String[]
  title          String   @unique
  unit           String
  updatedAt      DateTime @db.Date
  userId         String
  wholesalePrice Float
  wholesaleQty   BigInt
}

model Training {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  categoryId  String   @db.ObjectId
  content     String
  createdAt   DateTime @db.Date
  description String
  imageUrl    String
  isActive    Boolean
  slug        String   @unique
  title       String   @unique
  updatedAt   DateTime @db.Date
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  email     String   @unique
  name      String
  password  String
  role      String
  updatedAt DateTime @db.Date
}
